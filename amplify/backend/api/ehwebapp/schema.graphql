type Orders @model @auth(rules: [{ allow: public, provider: iam}]) {
  id: ID!
  createdAt: String!

  name: String!
  phoneNum: String!
  email: String!

  dateNeeded: AWSDate!
  timeNeeded: AWSTime
  location: String!

  status: OrderStatus!
  rushStatus: RushStatus!

  cart: [CartItem]!
}

enum OrderStatus {
  NEW
  MOCKUP_SENT
  STANDBY
  COMPLETE
}
enum RushStatus {
  NONE
  ONE_DAY
  TWO_TO_THREE_DAYS
}

#Table for storing the locations, graphic names, and available fonts
type OrderChoice @model @auth(rules: [{ allow: private, provider: iam}]) {
  type: ChoiceType!
  name: String!
}
enum ChoiceType {
  LOCATION
  FONT
  GRAPHIC
}

type Service {
  name: String!
  qty: Int!
}
type CartItem {
  itemName: String!
  itemCode: String!
  itemPrice: Float!

  services: [Service!]
  subItems: [CartItem!]
  quantity: Int!

  txtLines: [String!]
  font: String

  layoutImg: String
  graphics: [String!]

  notes: String

  #Postponed information flags
  postGraphics: Boolean!
  postTxt: Boolean!
  postLayout: Boolean!
}

type Items @model @auth(rules: [{ allow: private, provider: iam}]) {
  code: String! @primaryKey
  name: String!
  category: ItemCategory!
  qty: Int
  price: Float!
  cost: Float!
  
  qtyThresh: Int
  maxAddon: Int
  description: String
}
enum ItemCategory {
  PLAQUE
  DRINKWARE
  GIFT
}

type Services @model @auth(rules: [{ allow: private, provider: iam}]) {
  id: ID!
  name: String!
  type: String!
  price: Float!
}